{
  "info": {
    "name": "Todo API",
    "_postman_id": "b5f8e4a1-4b49-4e08-9e6f-20251020131551",
    "description": "Коллекция для тестирования Todo API с автотестами.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Create Task",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/tasks",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "tasks"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"title\": \"Test task\", \"description\": \"from Postman\", \"completed\": false}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 201', function () { pm.response.to.have.status(201); });",
              "const json = pm.response.json();",
              "pm.test('Has id', function () { pm.expect(json).to.have.property('id'); });",
              "pm.environment.set('taskId', json.id);"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "List Tasks (no params)",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/tasks",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "tasks"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 200', function () { pm.response.to.have.status(200); });",
              "const arr = pm.response.json();",
              "pm.test('Returns array', function () { pm.expect(Array.isArray(arr)).to.be.true; });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "List Tasks (completed=true)",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/tasks?completed=true",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "tasks"
          ],
          "query": [
            {
              "key": "completed",
              "value": "true"
            }
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 200', function () { pm.response.to.have.status(200); });",
              "const arr = pm.response.json();",
              "pm.test('Returns array', function () { pm.expect(Array.isArray(arr)).to.be.true; });",
              "pm.test('All completed=true', function () { arr.forEach(i => pm.expect(i.completed).to.eql(true)); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Task (existing)",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/tasks/{{taskId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "tasks",
            "{{taskId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 200', function () { pm.response.to.have.status(200); });",
              "const json = pm.response.json();",
              "pm.test('Has id', function () { pm.expect(json).to.have.property('id'); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Task (not found)",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/tasks/999999",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "tasks",
            "999999"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 404', function () { pm.response.to.have.status(404); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Update Task",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "http://localhost:3000/tasks/{{taskId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "tasks",
            "{{taskId}}"
          ]
        },
        "body": {
          "mode": "raw",
          "raw": "{\"title\": \"Updated title\", \"completed\": true}"
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 200', function () { pm.response.to.have.status(200); });",
              "const json = pm.response.json();",
              "pm.test('Title updated', function () { pm.expect(json.title).to.eql('Updated title'); });",
              "pm.test('Completed true', function () { pm.expect(json.completed).to.eql(true); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Delete Task",
      "request": {
        "method": "DELETE",
        "url": {
          "raw": "http://localhost:3000/tasks/{{taskId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "tasks",
            "{{taskId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 204', function () { pm.response.to.have.status(204); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Verify Deleted",
      "request": {
        "method": "GET",
        "url": {
          "raw": "http://localhost:3000/tasks/{{taskId}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "tasks",
            "{{taskId}}"
          ]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test('Status is 404 after delete', function () { pm.response.to.have.status(404); });"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}